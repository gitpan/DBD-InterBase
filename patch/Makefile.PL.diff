--- Makefile.PL.orig	Mon Oct  2 14:22:18 2000
+++ Makefile.PL	Mon Oct  2 14:36:04 2000
@@ -5,6 +5,7 @@
 use ExtUtils::MakeMaker 5.16, qw(prompt &WriteMakefile $Verbose);
 use Config;
 use Carp;
+use strict;
 
 # This DBI must be installed before we can build a DBD.
 # For those not using Dynamic loading this means building a
@@ -16,31 +17,37 @@
 my $dbi_arch_dir = dbd_dbi_arch_dir();
 my $ib_dir_prefix;
 
-while() {
-  my %dirs = (
-    1 => "/usr/interbase",
-    2 => "/opt/interbase",
-    3 => "/Progra~1/InterB~1/InterB~1",
-    4 => "/Progra~1/Borland/InterB~1",
-    9 => "other",
-  );
-  print "\nInterbase installation directory:\n";
-  for(sort keys %dirs) {
-    $_ == 9 || -d $dirs{$_} ?
-      print "$_) $dirs{$_}\n" :
-      delete $dirs{$_};
+sub test_files {
+  my($dir, $files) = @_;
+  local $_;
+  -f "$dir/$_" && return 1 for @$files;
+  0;
+}
+
+sub dir_choice {
+  my($prompt, $dirs, $files) = @_;
+  my %dirs = ('a' => 'other');
+  my $i;
+  test_files($_, $files) && ($dirs{++$i} = $_) for @$dirs;
+  my $ret;
+  while() {
+    print "\n$prompt\n\n";
+    print "$_) $dirs{$_}\n" for sort keys %dirs;
+    my $choice = prompt("Your choice:");
+    next unless $dirs{$choice};
+    $ret = ($choice eq 'a') ? prompt("Directory:", $ret) : $dirs{$choice};
+    return $ret if test_files($ret, $files);
+    print "\nDirectory is bad\n";
   }
-  my $choice = prompt("Your choice:", $choice);
-  next unless $dirs{$choice};
-  $ib_dir_prefix = $choice == 9 ? prompt("Directory:") : $dirs{$choice};
-  last if -d $ib_dir_prefix;
-  print "\nNo such directory\n";
 }
 
 # See lib/ExtUtils/MakeMaker.pm for details of how to influence
 # the contents of the Makefile that is written.
 
-my $GFIX_PATH = "$ib_dir_prefix/bin/gfix";
+my $GFIX_PATH = dir_choice("InterBase bin directory",
+  [qw(/usr/interbase/bin /opt/interbase/bin /usr/bin /usr/local/bin
+    /Progra~1/InterB~1/InterB~1/bin /Progra~1/Borland/InterB~1/bin)],
+  [qw(gfix gfix.exe)]);
 unless(-x $GFIX_PATH)
 {
   carp "I cannot find your InterBase installation.\nDBD::InterBase cannot build or run without InterBase.\n";
@@ -51,12 +58,10 @@
 $IBVERSION =~ s/^gfix version //o;
 
 my $is_final = $IBVERSION =~ /\.6\d+$/ ? 1 : 0;
-my $ib_inc = "$ib_dir_prefix/include";
-while() {
-  $ib_inc = prompt("Where is your InterBase include directory?", "$ib_inc");
-  last if -d $ib_inc;
-  print "\nNo such directory\n";
-}
+my $ib_inc = dir_choice("Interbase include directory",
+  [qw(/usr/interbase/include /opt/interbase/include /usr/include
+    /Progra~1/InterB~1/InterB~1/include /Progra~1/Borland/InterB~1/include)],
+  [qw(gds.h ibase.h)]);
 
 my $INC = "-I$ib_inc -I$dbi_arch_dir";
 my $LDDLFLAGS = '';
@@ -75,7 +80,7 @@
     # Rules for Microsoft Visual C++
     if ($Config{'cc'} eq 'cl.exe') {
 	$CCFLAGS = '-O2 -MD -DNDEBUG -DWIN32 -D_CONSOLE -DNO_STRICT -DHAVE_DES_FCRYPT';
-	$LDFROM = '$(OBJECT) handles.obj util.obj';
+#	$LDFROM = '$(OBJECT) handles.obj util.obj';
 	$INC = "-I$Config::Config{'archlibexp'}/CORE -I\"C:/Program Files/InterBase Corp/InterBase/include\" -I\"C:/Program Files/DevStudio/Vc/include\"";
 	eval "
 sub MY::const_loadlibs
@@ -91,7 +96,7 @@
     else
     {
 	$CCFLAGS = '-a4';
-	$LDFROM = '$(OBJECT) handles.obj util.obj';
+#	$LDFROM = '$(OBJECT) handles.obj util.obj';
 	$INC = "-I$Config::Config{'archlibexp'}/CORE -I\"C:/Program Files/InterBase Corp/InterBase/include\" -I\"C:/Program Files/Borland/BC5/include\"";
 	eval "
 sub MY::const_loadlibs {
@@ -114,13 +119,9 @@
     # This is for both:
     # o Free IB 4.0 for Red Hat Linux 4.2
     # o Commercial IB 5.1.1 for Red Hat Linux 5.1
-    my $ib_lib = "$ib_dir_prefix/lib";
-    while() {
-      $ib_lib = prompt("Where is your InterBase library directory?",
-		"$ib_lib");
-      last if -d $ib_lib;
-      print "\nNo such directory\n";
-    }
+    my $ib_lib = dir_choice("Interbase lib directory",
+      [qw(/usr/interbase/lib /opt/interbase/lib /usr/lib /usr/local/lib)],
+      [qw(libgds.a libgds.so)]);
 
     $LIBS = "-L$ib_lib -lgds -ldl";
 
@@ -136,13 +137,9 @@
 }
 elsif ($os eq 'freebsd')
 {
-    my $ib_lib = "$ib_dir_prefix/lib";
-    while() {
-      $ib_lib = prompt("Where is your InterBase library directory?",
-	"$ib_lib");
-      last if -d $ib_lib;
-      print "\nNo such directory\n";
-    }
+    my $ib_lib = dir_choice("Interbase lib directory",
+      [qw(/usr/interbase/lib /usr/lib)],
+      [qw(libgds.a libgds.so)]);
     $LIBS = "-L$ib_lib -lgds";
 }
 elsif ($os eq 'hpux')
